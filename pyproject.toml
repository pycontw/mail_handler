[tool.commitizen]
name = "cz_conventional_commits"
version = "0.5.1"
tag_format = "v$version"
version_files = [
    "pyproject.toml:^version"
]


[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''


[tool.isort]
profile = "black"


[tool.pylint]
    [tool.pylint.messages_control]
    disable = [
        "bad-continuation",
        "missing-function-docstring",
        "missing-module-docstring",
        "invalid-name"
    ]

    [tool.pylint.format]
    max-line-length = 88


[tool.mypy]
files = [
    "mail_handler",
    "tests"
]
ignore_missing_imports = true
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
warn_unused_configs = true
    [[tool.mypy.overrides]]
    module = ["mail_handler.*"]
    # Ensure full coverage
    disallow_untyped_calls = true
    disallow_untyped_defs = true
    disallow_incomplete_defs = true
    # disallow_untyped_decorators = true
    # Restrict dynamic typing
    disallow_any_generics = true
    disallow_subclassing_any = true
    warn_return_any = true

    [[tool.mypy.overrides]]
    module = ["tests.*"]
    disallow_untyped_defs = false
    disallow_untyped_decorators = false


[tool.pytest.ini_options]
minversion = "6.0"
testpaths = "tests"
addopts = "--strict-markers"
norecursedirs = [
    ".*",
    "build",
    "dist",
    "CVS",
    "_darcs",
    "{arch}",
    "*.egg",
    "venv",
    "env",
    "virtualenv"
]


[tool.coverage]
    [tool.coverage.report]
    show_missing = true
    exclude_lines = [
        # Have to re-enable the standard pragma
        'pragma: no cover',

        # Don't complain about missing debug-only code:
        'def __repr__',
        'if self\.debug',

        # Don't complain if tests don't hit defensive assertion code:
        'raise AssertionError',
        'raise NotImplementedError',

        # Don't complain if non-runnable code isn't run:
        'if 0:',
        'if __name__ == .__main__.:'
    ]
    omit = [
        'env/*',
        'venv/*',
        '*/virtualenv/*',
        '*/virtualenvs/*',
        '*/tests/*'
    ]


[tool.poetry]
name = "pycontw-mail-handler"
version = "0.5.1"
description = "Mail toolkit for PyCon Taiwan"
authors = ["Lee-W <weilee.rx@gmail.com>"]
license = "MIT"
readme = "docs/README.md"
packages = [
    {"include" = "mail_handler"}
]

[tool.poetry.scripts]
render_mail = "mail_handler.render_mail:main"
send_mail = "mail_handler.send_mail:main"

[tool.poetry.dependencies]
python = "^3.7"
click = "^7.1.2"
jinja2 = "^2.11.2"
typing-extensions = "^3.10.0"

[tool.poetry.dev-dependencies]
# task management
invoke = "^1.4.1"
# test
pytest = "^6.0.1"
pytest-cov = "^2.8.1"
pytest-mock = "^3.0.0"
pytest-xdist = "^1.31.0"
hypothesis = "^5.8.0"
coverage = {extras = ["toml"], version = "^6.0b1"}
tox = "^3.15.1"
# style
flake8 = "^3.7.9"
pylint = "^2.7.0"
mypy = "^0.910"
black = "^21.7b0"
isort = "^5.0.0"
# security
bandit = "^1.6.2"
safety = "^1.8.7"
# git
commitizen = "^2.17.13"
pre-commit = "^2.2.0"
# documentation
mkdocs = "^1.2.2"
mkdocs-material = "^7.2.2"

[build-system]
requires = ["poetry>=1.0.5"]
build-backend = "poetry.masonry.api"
